@page "/expensedetails/create"
@using Microsoft.EntityFrameworkCore
@using InvoiceApp.Models
@inject IDbContextFactory<InvoiceApp.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>ExpenseDetail</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="ExpenseDetail" OnValidSubmit="AddExpenseDetail" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="hst" class="form-label">Hst:</label> 
                <InputNumber id="hst" @bind-Value="ExpenseDetail.Hst" class="form-control" /> 
                <ValidationMessage For="() => ExpenseDetail.Hst" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="amount" class="form-label">Amount:</label> 
                <InputNumber id="amount" @bind-Value="ExpenseDetail.Amount" class="form-control" /> 
                <ValidationMessage For="() => ExpenseDetail.Amount" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="expenseid" class="form-label">ExpenseId:</label> 
                <InputNumber id="expenseid" @bind-Value="ExpenseDetail.ExpenseId" class="form-control" /> 
                <ValidationMessage For="() => ExpenseDetail.ExpenseId" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/expensedetails">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private ExpenseDetail ExpenseDetail { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddExpenseDetail()
    {
        using var context = DbFactory.CreateDbContext();
        context.ExpenseDetails.Add(ExpenseDetail);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/expensedetails");
    }
}
